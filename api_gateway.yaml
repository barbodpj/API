swagger: "2.0"
info:
  description: This is a microservice that is the users' gateway to other microservices.
  version: "1.0.0"
  title: "API Gateway"
host: "127.0.0.1:80"
basePath: "/"
tags:
  - name: "user"
    description: "Operations on users"
schemes:
  - "http"
paths:
  /signup:
    post:
      tags:
        - "user"
      summary: "Sign new users up"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            type: object
            required:
              - username
              - password
              - isAdmin
            properties:
              username:
                type: string
              password:
                type: string
              email:
                type: string
              phone:
                type: string
              isAdmin:
                type: boolean
      responses:
        "201":
          description: "Created"
          schema:
            type: "object"
            properties:
              message:
                type: string
        '400':
          description: 'Bad request'
          schema:
            type: "object"
            properties:
              message:
                type: string
        "409":
          description: "User already exists"
          schema:
            type: "object"
            properties:
              message:
                type: string
  /login:
    post:
      tags:
        - "user"
      summary: "Login for users"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: true
          schema:
            type: object
            required:
              - username
              - password
            properties:
              username:
                type: string
              password:
                type: string
      responses:
        "200":
          description: "Ok"
          schema:
            type: "object"
            properties:
              message:
                type: string
              token:
                type: string
        '400':
          description: 'Bad request'
          schema:
            type: "object"
            properties:
              message:
                type: string
        "401":
          description: 'Unauthorized'
          schema:
            type: "object"
            properties:
              message:
                type: string
  /show_profile/{username}:
    get:
      tags:
        - "user"
      summary: "Return user information + posts"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: username
          type: string
          required: true
      responses:
        "200":
          description: "Ok"
          schema:
            type: "object"
            properties:
              posts:
                type: "array"
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    username:
                      type: string
                    title:
                      type: string
                    body:
                      type: string
              username:
                type: string
              email:
                type: string
              phone:
                type: string
              isAdmin:
                type: boolean
        "401":
          description: 'Unauthorized'
          schema:
            type: "object"
            properties:
              message:
                type: string
        "404":
          description: "User not found"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
      security:
        - Bearer: [ ]
  /update_profile/{username}:
    post:
      tags:
        - "user"
      summary: "Modify user information"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: 'username'
          type: string
          required: true
        - in: "body"
          name: "body"
          required: True
          schema:
            type: "object"
            properties:
              username:
                type: string
              password:
                type: string
              email:
                type: string
              phone:
                type: string
              isAdmin:
                type: boolean
      responses:
        "200":
          description: "Successful update"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
        "400":
          description: "Bad request"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
        "401":
          description: 'Unauthorized'
          schema:
            type: "object"
            properties:
              message:
                type: string
        "404":
          description: "User not found"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
      security:
        - Bearer: [ ]
  /posts:
    post:
      tags:
        - "post"
      summary: "Create new post (only for normal users)"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          required: True
          schema:
            type: "object"
            properties:
              title:
                type: string
              body:
                type: string
      responses:
        "200":
          description: "Successful update"
    security:
      - Bearer: [ ]
  /posts/{post_id}:
    delete:
      tags:
        - "post"
      summary: "Delete a post"
      produces:
        - "application/json"
      parameters:
        - in: path
          name: post_id
          type: integer
          required: true
      responses:
        "204":
          description: "Deleted"
          schema:
            type: "object"
        "404":
          description: "User not found"
          schema:
            type: "object"
            properties:
              message:
                type: "string"
  /explore:
    get:
      tags:
        - "post"
      summary: "View timeline (all posts + user info)"
      produces:
        - "application/json"
      responses:
        "200":
          description: "Successful fetch"
          schema:
            type: "array"
            items:
              type: object
              properties:
                id:
                  type: string
                username:
                  type: string
                title:
                  type: string
                body:
                  type: string
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header